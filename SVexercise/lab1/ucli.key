synUtils::getArch
loaddl -simv /home/milo/apps/Synopsys/verdi_2016.06-1/share/PLI/VCS/LINUXAMD64/libnovas.so LoadFSDBDumpCmd;LoadFSDBDumpCmd
config ckptfsdbcheck off;config endofsim noexit;config onfail {enable all};catch {setUcliVerdiConnected};cbug::config pretty_print auto;fsdbDumpfile {/home/milo/Codes/ICCodes/SVexercise/lab1/inter.fsdb}; fsdbDumpflush;
sps_interactive
ucliCore::getToolPID
if {[catch {ucliCore::setFocus tool}]} {}
puts $ucliCore::nativeUcliMode
ucliCore::getToolTopPID
pid
synUtils::sendTool -active {_icl_createSharedMemory /tmp/vcs_dve_general.milo.4222 }
if { [info vars watch::vcbp_str_len_limit_of_get_value] != ""} {set watch::vcbp_str_len_limit_of_get_value 1024}
info command stateVerdiChangeCB
proc stateVerdiChangeCB args { if {$ucliGUI::state eq "terminated"} {puts "\nVERDI_SIM_Terminated\n";catch {setVerdiSimTerminated}}}
trace variable ucliGUI::state wu stateVerdiChangeCB
if {[catch {rename synopsys::restore verdiHack::restore} ]} {puts "0"}
proc synopsys::restore {args} { verdiHack::restore $args; puts "\nVERDI_SIM_RESTORE\n"}
if {[catch {rename quit verdiHack::quit} ]} {puts "0"}
proc quit {args} { if {[string length $args] == 0} { verdiHack::quit; } elseif {([string equal "-h" $args] == 1)||([string equal "-he" $args] == 1)||([string equal "-hel" $args] == 1)||([string equal "-help" $args] == 1)} { puts "\n quit           # Exit the simulation.\n \[-noprompt\]        (Exit the simulation and Verdi.)\n"} elseif {([string equal "-n" $args] == 1)||([string equal "-no" $args] == 1)||([string equal "-nop" $args] == 1)||([string equal "-nopr" $args] == 1)||([string equal "-nopro" $args] == 1)||([string equal "-noprom" $args] == 1)||([string equal "-nopromp" $args] == 1)||([string equal "-noprompt" $args] == 1)} { puts "\nVERDI_EXIT_N\n" } else { verdiHack::quit $args; } }
if {[catch {rename exit verdiHack::exit} ]} {puts "0"}
proc exit {args} { if {[string length $args] == 0} { verdiHack::exit; } elseif {([string equal "-h" $args] == 1)||([string equal "-he" $args] == 1)||([string equal "-hel" $args] == 1)||([string equal "-help" $args] == 1)} { puts "\n exit           # Exit the simulation.\n \[-noprompt\]        (Exit the simulation and Verdi.)\n"} elseif {([string equal "-n" $args] == 1)||([string equal "-no" $args] == 1)||([string equal "-nop" $args] == 1)||([string equal "-nopr" $args] == 1)||([string equal "-nopro" $args] == 1)||([string equal "-noprom" $args] == 1)||([string equal "-nopromp" $args] == 1)||([string equal "-noprompt" $args] == 1)} { puts "\nVERDI_EXIT_N\n" } else { verdiHack::exit $args; } }
if {[catch {ucliCore::setFocus tool}]} {}
fsdbDumpflush 
senv
synUtils::resolveSourceFilename ./tb1.sv
puts $::ucliCore::cbug_active
if {[catch {ucliCore::setFocus tool}]} {}
checkpoint -list -all
stop
if {[catch {ucliCore::setFocus tool}]} {}
fsdbDumpvars 1 {tb1.ch0_ready} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.ch0_valid} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.ch1_ready} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.ch1_valid} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.ch2_ready} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.ch2_valid} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.clk} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.mcdt_val} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.rstn} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.ch0_data} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.ch0_margin} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.ch1_data} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.ch1_margin} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.ch2_data} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.ch2_margin} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.mcdt_data} ;fsdbDumpflush
fsdbDumpvars 1 {tb1.mcdt_id} ;fsdbDumpflush
if {[catch {ucliCore::setFocus tool}]} {}
run 1us
ucliCore::getToolPID
synEnv::isFinished
if {[catch {ucliCore::setFocus tool}]} {}
fsdbDumpflush 
senv
synUtils::resolveSourceFilename ./tb1.sv
puts $::ucliCore::cbug_active
if {[catch {ucliCore::setFocus tool}]} {}
checkpoint -list -all
if {[catch {ucliCore::setFocus tool}]} {}
stop
if {[catch {ucliCore::setFocus tool}]} {}
